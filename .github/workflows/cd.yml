name: YumRush CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          cd frontend
          echo "Installing dependencies..."
          npm install
          echo "Deploying to Vercel..."
          vercel deploy --prod --token=${VERCEL_TOKEN}
  
  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
      
      - name: Wait for deployment
        run: sleep 120
      
      - name: Check backend health
        run: |
          if [ -n "${{ secrets.BACKEND_URL }}" ]; then
            curl -f ${{ secrets.BACKEND_URL }}/api/health || echo "Backend health check failed, but continuing"
          else
            echo "BACKEND_URL not set, skipping health check"
          fi
      
      - name: Run init-db script if requested
        if: ${{ github.event.inputs.init_db == 'true' }}
        run: |
          curl -X POST ${{ secrets.RENDER_INIT_DB_HOOK }}
  
  post-deployment:
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    
    steps:
      - name: Check frontend
        run: |
          if [ -n "${{ secrets.FRONTEND_URL }}" ]; then
            curl -f https://${{ secrets.FRONTEND_URL }} || echo "Frontend check failed, but continuing"
          else
            echo "FRONTEND_URL not set, skipping check"
          fi
      
      - name: Check backend API
        run: |
          if [ -n "${{ secrets.BACKEND_URL }}" ]; then
            curl -f ${{ secrets.BACKEND_URL }}/api/health || echo "Backend API check failed, but continuing"
          else
            echo "BACKEND_URL not set, skipping API check"
          fi
      
      - name: Deployment completed
        run: echo "âœ… Deployment process completed"