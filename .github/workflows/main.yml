name: YumRush CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.modified, 'backend/') ||
      contains(github.event.head_commit.added, 'backend/') ||
      contains(github.event.head_commit.removed, 'backend/') ||
      github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type checking
        run: npm run typecheck
        
      - name: Linting
        run: npm run lint
        
      - name: Run backend tests
        run: npm test
        
  test-frontend:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.modified, 'frontend/') ||
      contains(github.event.head_commit.added, 'frontend/') ||
      contains(github.event.head_commit.removed, 'frontend/') ||
      github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type checking
        run: npm run typecheck
        
      - name: Linting
        run: npm run lint
        
      - name: Run frontend tests
        run: npm test
        
  deploy-backend:
    needs: [test-backend]
    if: |
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push' &&
      (contains(github.event.head_commit.modified, 'backend/') ||
       contains(github.event.head_commit.added, 'backend/') ||
       contains(github.event.head_commit.removed, 'backend/'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
          echo "ðŸš€ Backend deployment triggered on Render"
          
  deploy-frontend:
    needs: [test-frontend]
    if: |
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push' &&
      (contains(github.event.head_commit.modified, 'frontend/') ||
       contains(github.event.head_commit.added, 'frontend/') ||
       contains(github.event.head_commit.removed, 'frontend/'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          cd frontend
          echo "Installing dependencies..."
          npm ci
          echo "Deploying to Vercel..."
          vercel deploy --prod --token=${VERCEL_TOKEN}