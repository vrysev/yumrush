name: YumRush CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install
      
      - name: Run backend tests
        working-directory: ./backend
        run: npm test
  
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: test-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Fix React version compatibility
        working-directory: ./frontend
        run: |
          sed -i 's/"react-test-renderer": ".*"/"react-test-renderer": "^18.2.0"/' package.json
          sed -i 's/"react-is": ".*"/"react-is": "^18.2.0"/' package.json
          if ! grep -q "react-shallow-renderer" package.json; then
            sed -i '/"dependencies": {/a \    "react-shallow-renderer": "^16.15.0",' package.json
          fi
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install
      
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test
  
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test-frontend
    # Skip E2E tests for now - uncomment when E2E tests are ready
    if: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Cypress
        run: npm install -g cypress
      
      - name: Run E2E tests
        run: echo "E2E tests would run here"
  
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test-frontend]  # Add e2e-tests here when ready
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Deploy backend
      - name: Deploy backend to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
          echo "ðŸš€ Backend deployed to Render"
      
      # Deploy frontend
      - name: Setup Node.js for frontend deployment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          cd frontend
          npm install
          vercel deploy --prod --token=${VERCEL_TOKEN}
          echo "ðŸš€ Frontend deployed to Vercel"